#!/bin/bash

spark-sql --master yarn --queue root.B --num-executors 400 --executor-cores 3 --executor-memory 10G -e "
	add jar /data2/USERS/hadoop_dfgx_A/time_interval.jar;
	create temporary function td as 'time_interval.test1';
	create table dfgx_tour_db.dfgx_sz_province_travel_2018gq as SELECT o.isdn, o.city, o.first_day, o.end_day, o.stay_day, o.final_traffic_type, o.sex, o.age_type FROM(SELECT k.isdn, k.city, split(k.first_time, ' ')[0] AS first_day,split(k.last_time,' ')[0] AS end_day,k.stay_day,k.final_traffic_type,case WHEN l.sex = '' OR l.sex is NULL THEN '未知' ELSE l.sex END AS sex,case WHEN l.age_type = '' OR l.age_type is NULL THEN '未知' ELSE l.age_type END AS age_type FROM (SELECT j.isdn, j.city, j.first_time, j.last_time, j.stay_day, first_value(j.traffic_type) over(partition by j.isdn, j.city, j.first_time, j.last_time) AS final_traffic_type FROM (SELECT i.isdn, i.city, i.traffic_type, i.first_time, i.last_time, datediff(i.last_time, i.first_time) AS stay_day FROM (SELECT g.isdn, g.lac, g.ci, g.t_time, g.city, g.code, nvl(h.traffic_type, '其他') AS traffic_type,first_value(g.t_time) over(partition by g.isdn,g.city,g.code ORDER BY g.t_time) AS first_time,last_value(g.t_time) over(partition by g.isdn,g.city,g.code ORDER BY g.t_time rows BETWEEN unbounded preceding AND unbounded following) AS last_time FROM (SELECT f.isdn, f.lac, f.ci, f.t_time, f.city, f.l_row, f.r_row, (f.l_row-f.r_row) AS code FROM (SELECT e.isdn, e.lac, e.ci, e.t_time, e.city , e.l_row, row_number() over(partition by e.isdn, e.city ORDER BY e.t_time) AS r_row FROM (SELECT d.isdn, d.lac, d.ci, d.t_time, d.city, row_number() over(partition by d.isdn ORDER BY d.t_time) AS l_row FROM (SELECT a.isdn, a.lac, a.ci, concat(concat_ws ('-',a.year,lpad(a.month,2,0),lpad(a.day,2,0)),' ',regexp_replace(a.time,'-',':')) AS t_time,c.city FROM dfgx_tour_db.dfgx_brd_sdtp a JOIN dfgx_tour_db.dfgx_native_final_people b JOIN dfgx_tour_db.dfgx_lacci_info c ON a.isdn=b.isdn AND c.lacci=concat(a.lac,a.ci) WHERE concat (a.deal_year,lpad(a.deal_month,2,0),lpad(a.deal_day,2,0))>='20180901' AND concat(a.deal_year,lpad(a.deal_month,2,0),lpad(a.deal_day,2,0))<='20180905' AND a.isdn <> '' AND length(a.isdn)=11) d GROUP BY d.isdn,d.lac,d.ci,d.t_time,d.city ORDER BY d.t_time) e) f WHERE instr(f.city,'深圳')=0) g LEFT JOIN dfgx_tour_db.dim_lac_ci_traffic_mapping h ON g.lac=conv(h.lac,10,16) AND g.ci=conv (h.ci,10,16)) i GROUP BY i.isdn,i.city,i.traffic_type,i.first_time,i.last_time) j WHERE j.traffic_type <> '其他') k LEFT JOIN (SELECT serial_number, sex, case WHEN age <=14 THEN '少年' WHEN age>=15 AND age<=24 THEN '青年' WHEN age>=25 AND age<=44 THEN '壮盛年' WHEN age>=45 AND age<=64 THEN '中年' WHEN age>=65 THEN '老年' END AS age_type FROM dfgx_wo_db.dfgx_user_info) l ON l.serial_number=k.isdn) o GROUP BY o.isdn,o.city,o.first_day,o.end_day,o.stay_day,o.final_traffic_type,o.sex,o.age_type;
"