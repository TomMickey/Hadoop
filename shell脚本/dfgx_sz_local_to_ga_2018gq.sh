#!/bin/bash


hive -e "
	set mapreduce.job.name='深圳本地港澳游';
	add jar /data2/USERS/hadoop_dfgx_A/time_interval.jar;
	create temporary function td as 'time_interval.test1';
	user dfgx_tour_db;
	create table dfgx_tour_db.dfgx_sz_local_to_ga_2018gq as select g.isdn,split(g.t_time,' ')[0] as start_day,g.lac,g.ci,g.to_city,g.age_type,g.sex_type,split(g.next_time,' ')[0] as end_day,td(g.t_time,g.next_time) as stay_time,datediff(case when nvl(g.next_time,g.t_time) < '2018-09-01 00:00:00' then '2018-09-01 00:00:00' else nvl(g.next_time,g.t_time) end,case when g.t_time< '2018-09-01 00:00:00' then '2018-09-01 00:00:00' else g.t_time end) as stay_day from (select f.isdn,f.t_time,f.lac,f.ci,f.to_city,f.is_sz,f.is_mt,f.age_type,f.sex_type,lead(f.t_time) over(partition by f.isdn order by f.t_time) as next_time from (select e.isdn,e.t_time,e.lac,e.ci,e.to_city,case when e.to_city like '%深圳%' then 1 else 0 end as is_sz,case when f.spot_id is not null then 1 else 0 end as is_mt,case when h.age>=0 and h.age<=14 then '少年' when h.age>=15 and h.age<=24 then '青年' when h.age>=25 and h.age<=44 then '壮盛年' when h.age>=45 and h.age<=64 then '中年' when h.age>=65 then '老年' else '未知' end as age_type,case when h.sex='M' then '男' when h.sex='F' then '女 ' else '未知' end as sex_type from (select a.isdn,concat(concat_ws('-',a.year,lpad(a.month,2,0),lpad(a.day,2,0)),' ',regexp_replace(a.time,'-',':')) as t_time,a.lac,a.ci,d.city as to_city from dfgx_tour_db.dfgx_brd_sdtp a join dfgx_tour_db.sz_cz_people_gq b join dfgx_tour_db.dfgx_lacci_info d on a.isdn=b.isdn and d.lacci=concat(a.lac,a.ci) where concat (a.deal_year,lpad(a.deal_month,2,0),lpad (a.deal_day,2,0))>='20180901' and concat(a.deal_year,lpad(a.deal_month,2,0),lpad(a.deal_day,2,0))<='20180905') e left join (select * from dfgx_tour_db.dim_lac_ci_spot_mapping where spot_id between '051755022' and '051755027') f on e.lac=conv(f.lac,10,16) and e.ci=conv(f.ci,10,16) left join dfgx_wo_db.dfgx_user_info h on  e.isdn=h.serial_number) f group by f.isdn,f.t_time,f.lac,f.ci,f.to_city,f.is_sz,f.is_mt,f.age_type,f.sex_type) g where g.is_mt=1 and g.next_time is not null group by g.isdn,g.t_time,g.next_time,g.lac,g.ci,g.to_city,g.age_type,g.sex_type having stay_time>=18000;
"