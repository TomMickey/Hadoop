#!/bin/bash

spark-sql --master yarn --queue root.B --num-executors 400 --executor-cores 3 --executor-memory 10G -e "
	set mapreduce.job.name='深圳本地国外游-生成结果数据';
	use dfgx_tour_db;
	insert overwrite table dfgx_tour_db.dfgx_sz_to_gw_people_info_2018gq SELECT l.msisdn,l.ch_name,l.first_day,l.last_day,l.stay_day,l.age_type,l.sex_type FROM (SELECT h.msisdn,h.visit_area_code,k.ch_name,h.first_day,h.last_day,h.stay_day,nvl(j.age_type,'未知') AS age_type,case WHEN j.sex='M' THEN '男' WHEN j.sex='F' THEN '女' ELSE '未知' END AS sex_type FROM  (SELECT g.msisdn,g.visit_area_code,g.first_day,g.last_day,datediff(g.last_day,g.first_day) AS stay_day FROM  (SELECT f.msisdn, f.visit_area_code,f.start_date,f.code,first_value(f.start_date) over(partition by f.msisdn,f.visit_area_code,f.code ORDER BY  f.start_date) AS first_day,last_value(f.start_date) over(partition by f.msisdn,f.visit_area_code,f.code) AS last_day FROM  (SELECT e.msisdn,e.visit_area_code,e.start_date,e.l_num,e.r_num,(l_num-r_num) AS code FROM  (SELECT d.msisdn, d.visit_area_code,d.start_date,d.l_num,row_number() over(partition by d.msisdn,d.visit_area_code ORDER BY  d.start_date) AS r_num FROM  (SELECT b.msisdn,b.visit_area_code,b.start_date,row_number() over(partition by b.msisdn ORDER BY  b.start_date) AS l_num FROM  (SELECT c.msisdn, c.visit_area_code, c.start_date  FROM  (SELECT a.msisdn,a.visit_area_code,start_date FROM   (SELECT msisdn, case  WHEN roam_type = '6' THEN visit_area_code ELSE '国内' END AS visit_area_code,concat(concat_ws('-',substr(start_date,1,4),substr(start_date,5,2),substr(start_date,7,2)),' ','00:00:00') AS start_date  FROM dfgx_tour_db.dfgx_sz_cg_travel_mx_2018gq WHERE visit_area_code!='00852' AND visit_area_code!='00853' AND visit_area_code!='00886') a) c GROUP BY  c.msisdn,c.visit_area_code,c.start_date)b) d) e) f) g WHERE g.visit_area_code !='国内') h  LEFT JOIN  (SELECT SERIAL_NUMBER, case WHEN age <=14 THEN '少年' WHEN age>=15  AND age<=24 THEN '青年' WHEN age>=25  AND age<=44 THEN '壮盛年'  WHEN age>=45  AND age<=64 THEN '中年' WHEN age>=65 THEN '老年' END AS age_type,case WHEN sex = ''  OR sex is NULL THEN'未知'  ELSE sex END AS sex FROM dfgx_wo_db.dfgx_user_info) j JOIN dfgx_tour_db.dfgx_abroad_area_code k ON h.msisdn=j.serial_number AND h.visit_area_code=k.area_code) l  WHERE l.first_day >= '2018-09-01 00:00:00' GROUP BY  l.msisdn,l.ch_name,l.first_day,l.last_day,l.stay_day,l.age_type,l.sex_type;
"